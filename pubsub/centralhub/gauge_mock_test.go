// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/pubsub/centralhub (interfaces: GaugeVec)

// Package centralhub is a generated GoMock package.
package centralhub

import (
	reflect "reflect"

	prometheus "github.com/prometheus/client_golang/prometheus"
	gomock "go.uber.org/mock/gomock"
)

// MockGaugeVec is a mock of GaugeVec interface.
type MockGaugeVec struct {
	ctrl     *gomock.Controller
	recorder *MockGaugeVecMockRecorder
}

// MockGaugeVecMockRecorder is the mock recorder for MockGaugeVec.
type MockGaugeVecMockRecorder struct {
	mock *MockGaugeVec
}

// NewMockGaugeVec creates a new mock instance.
func NewMockGaugeVec(ctrl *gomock.Controller) *MockGaugeVec {
	mock := &MockGaugeVec{ctrl: ctrl}
	mock.recorder = &MockGaugeVecMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGaugeVec) EXPECT() *MockGaugeVecMockRecorder {
	return m.recorder
}

// Collect mocks base method.
func (m *MockGaugeVec) Collect(arg0 chan<- prometheus.Metric) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Collect", arg0)
}

// Collect indicates an expected call of Collect.
func (mr *MockGaugeVecMockRecorder) Collect(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Collect", reflect.TypeOf((*MockGaugeVec)(nil).Collect), arg0)
}

// Describe mocks base method.
func (m *MockGaugeVec) Describe(arg0 chan<- *prometheus.Desc) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Describe", arg0)
}

// Describe indicates an expected call of Describe.
func (mr *MockGaugeVecMockRecorder) Describe(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Describe", reflect.TypeOf((*MockGaugeVec)(nil).Describe), arg0)
}

// With mocks base method.
func (m *MockGaugeVec) With(arg0 prometheus.Labels) prometheus.Gauge {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "With", arg0)
	ret0, _ := ret[0].(prometheus.Gauge)
	return ret0
}

// With indicates an expected call of With.
func (mr *MockGaugeVecMockRecorder) With(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "With", reflect.TypeOf((*MockGaugeVec)(nil).With), arg0)
}

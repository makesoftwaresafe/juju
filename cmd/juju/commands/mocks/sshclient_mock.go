// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/cmd/juju/commands (interfaces: SSHClientAPI)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	cloudspec "github.com/juju/juju/environs/cloudspec"
	gomock "go.uber.org/mock/gomock"
)

// MockSSHClientAPI is a mock of SSHClientAPI interface.
type MockSSHClientAPI struct {
	ctrl     *gomock.Controller
	recorder *MockSSHClientAPIMockRecorder
}

// MockSSHClientAPIMockRecorder is the mock recorder for MockSSHClientAPI.
type MockSSHClientAPIMockRecorder struct {
	mock *MockSSHClientAPI
}

// NewMockSSHClientAPI creates a new mock instance.
func NewMockSSHClientAPI(ctrl *gomock.Controller) *MockSSHClientAPI {
	mock := &MockSSHClientAPI{ctrl: ctrl}
	mock.recorder = &MockSSHClientAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSSHClientAPI) EXPECT() *MockSSHClientAPIMockRecorder {
	return m.recorder
}

// BestAPIVersion mocks base method.
func (m *MockSSHClientAPI) BestAPIVersion() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BestAPIVersion")
	ret0, _ := ret[0].(int)
	return ret0
}

// BestAPIVersion indicates an expected call of BestAPIVersion.
func (mr *MockSSHClientAPIMockRecorder) BestAPIVersion() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BestAPIVersion", reflect.TypeOf((*MockSSHClientAPI)(nil).BestAPIVersion))
}

// Close mocks base method.
func (m *MockSSHClientAPI) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockSSHClientAPIMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockSSHClientAPI)(nil).Close))
}

// Leader mocks base method.
func (m *MockSSHClientAPI) Leader(arg0 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Leader", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Leader indicates an expected call of Leader.
func (mr *MockSSHClientAPIMockRecorder) Leader(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Leader", reflect.TypeOf((*MockSSHClientAPI)(nil).Leader), arg0)
}

// ModelCredentialForSSH mocks base method.
func (m *MockSSHClientAPI) ModelCredentialForSSH() (cloudspec.CloudSpec, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ModelCredentialForSSH")
	ret0, _ := ret[0].(cloudspec.CloudSpec)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ModelCredentialForSSH indicates an expected call of ModelCredentialForSSH.
func (mr *MockSSHClientAPIMockRecorder) ModelCredentialForSSH() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ModelCredentialForSSH", reflect.TypeOf((*MockSSHClientAPI)(nil).ModelCredentialForSSH))
}
